import java.util.function.BiConsumer

apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'androidx.navigation.safeargs'

Properties loadProperties(String buildType) {
    def props = new Properties()
    def filename = buildType + ".properties"
    try {
        file(filename).withInputStream { props.load(it) }
        return props
    } catch (FileNotFoundException ignored) {
        throw new Exception("Config not found ($filename). Check out config-example.properties file.")
    }
}

HashMap<String, String> loadPropertiesIntoMap(String buildType) {
    def map = new HashMap<String, String>()
    loadProperties(buildType).forEach(new BiConsumer<Object, Object>() {
        @Override
        void accept(Object key, Object value) {
            map.put(key, value)
        }
    })
    return map
}

android {
    compileSdkVersion androidCompileSdkVersion
    defaultConfig {
        applicationId "feedrss.dev.aporia.com.rssfeed"
        minSdkVersion androidMinSdkVersion
        targetSdkVersion androidTargetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            for (Map.Entry<String, String> entry : loadPropertiesIntoMap("release").entrySet()) {
                buildConfigField "String", entry.key, "\"${entry.value}\""
            }
        }
    }

    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }

    dataBinding {
        enabled = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"
    implementation "androidx.appcompat:appcompat:$appCompatVersion"
    implementation "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion"
    implementation "androidx.legacy:legacy-support-v4:$legacyV4Version"
    implementation "com.android.support:design:$designSupportVersion"
    implementation "com.android.support:support-compat:$designSupportVersion"
    implementation "com.android.support:multidex:$multidexVersion"

    // ViewModel and LiveData
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-reactivestreams-ktx:$lifecycleVersion"
    kapt "androidx.lifecycle:lifecycle-compiler:$lifecycleVersion"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-simplexml:$retrofitVersion"
    implementation "com.squareup.okhttp3:okhttp:$okhttpVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttpLogVersion"

    // Dagger2
    implementation "com.google.dagger:dagger:$daggerVersion"
    implementation "com.google.dagger:dagger-android:$daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"

    // Room
    implementation "androidx.room:room-runtime:$roomVersion"
    implementation "android.arch.persistence.room:rxjava2:1.1.1"
    kapt "androidx.room:room-compiler:$roomVersion"
    testImplementation "androidx.room:room-testing:$roomVersion"

    // Navigation
    implementation "android.arch.navigation:navigation-fragment-ktx:$navigationVersion"
    implementation "android.arch.navigation:navigation-ui-ktx:$navigationVersion"


    // Rx
    implementation "io.reactivex:rxkotlin:$rxKotlinVersion"
    implementation "io.reactivex.rxjava2:rxandroid:$rxAndroidVersion"
    implementation "com.jakewharton.rxbinding2:rxbinding:$rxBindingVersion"
    implementation "androidx.room:room-rxjava2:$roomRxVersion"

    implementation "com.github.faruktoptas:RetrofitRssConverterFactory:$retrofitRssConverterFactoryVersion"
    implementation "com.google.code.gson:gson:${gsonVersion}"

    testImplementation "junit:junit:$junitVersion"

    androidTestImplementation "androidx.test:runner:$testRunnerVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoCoreVersion"

    debugImplementation "com.squareup.leakcanary:leakcanary-android:$leakCanaryVersion"
}

androidExtensions {
    experimental = true
}
